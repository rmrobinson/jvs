// Code generated by protoc-gen-go.
// source: bridge.proto
// DO NOT EDIT!

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	bridge.proto
	device.proto
	version.proto

It has these top-level messages:
	Address
	BridgeState
	BridgeConfig
	BridgeSwUpdate
	Bridge
	GetBridgesRequest
	GetBridgesResponse
	WatchBridgesRequest
	WatchBridgesResponse
	DeviceConfig
	DeviceState
	Device
	GetDevicesRequest
	GetDevicesResponse
	GetDeviceRequest
	GetDeviceResponse
	WatchDevicesRequest
	WatchDevicesResponse
	SetDeviceConfigRequest
	SetDeviceConfigResponse
	SetDeviceStateRequest
	SetDeviceStateResponse
	VersionRequest
	VersionResponse
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type WatchBridgesResponse_Action int32

const (
	WatchBridgesResponse_ADDED   WatchBridgesResponse_Action = 0
	WatchBridgesResponse_CHANGED WatchBridgesResponse_Action = 1
	WatchBridgesResponse_REMOVED WatchBridgesResponse_Action = 2
)

var WatchBridgesResponse_Action_name = map[int32]string{
	0: "ADDED",
	1: "CHANGED",
	2: "REMOVED",
}
var WatchBridgesResponse_Action_value = map[string]int32{
	"ADDED":   0,
	"CHANGED": 1,
	"REMOVED": 2,
}

func (x WatchBridgesResponse_Action) String() string {
	return proto1.EnumName(WatchBridgesResponse_Action_name, int32(x))
}
func (WatchBridgesResponse_Action) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{8, 0}
}

type Address struct {
	Ip  *Address_Ip  `protobuf:"bytes,1,opt,name=ip" json:"ip,omitempty"`
	Usb *Address_Usb `protobuf:"bytes,2,opt,name=usb" json:"usb,omitempty"`
}

func (m *Address) Reset()                    { *m = Address{} }
func (m *Address) String() string            { return proto1.CompactTextString(m) }
func (*Address) ProtoMessage()               {}
func (*Address) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Address) GetIp() *Address_Ip {
	if m != nil {
		return m.Ip
	}
	return nil
}

func (m *Address) GetUsb() *Address_Usb {
	if m != nil {
		return m.Usb
	}
	return nil
}

type Address_Ip struct {
	Host    string `protobuf:"bytes,1,opt,name=host" json:"host,omitempty"`
	Netmask string `protobuf:"bytes,2,opt,name=netmask" json:"netmask,omitempty"`
	Gateway string `protobuf:"bytes,3,opt,name=gateway" json:"gateway,omitempty"`
	ViaDhcp bool   `protobuf:"varint,10,opt,name=via_dhcp,json=viaDhcp" json:"via_dhcp,omitempty"`
}

func (m *Address_Ip) Reset()                    { *m = Address_Ip{} }
func (m *Address_Ip) String() string            { return proto1.CompactTextString(m) }
func (*Address_Ip) ProtoMessage()               {}
func (*Address_Ip) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type Address_Usb struct {
	Path string `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
}

func (m *Address_Usb) Reset()                    { *m = Address_Usb{} }
func (m *Address_Usb) String() string            { return proto1.CompactTextString(m) }
func (*Address_Usb) ProtoMessage()               {}
func (*Address_Usb) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 1} }

type BridgeState struct {
	IsPaired bool                 `protobuf:"varint,1,opt,name=is_paired,json=isPaired" json:"is_paired,omitempty"`
	Version  *BridgeState_Version `protobuf:"bytes,100,opt,name=version" json:"version,omitempty"`
	Zigbee   *BridgeState_Zigbee  `protobuf:"bytes,110,opt,name=zigbee" json:"zigbee,omitempty"`
	Zwave    *BridgeState_Zwave   `protobuf:"bytes,111,opt,name=zwave" json:"zwave,omitempty"`
}

func (m *BridgeState) Reset()                    { *m = BridgeState{} }
func (m *BridgeState) String() string            { return proto1.CompactTextString(m) }
func (*BridgeState) ProtoMessage()               {}
func (*BridgeState) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *BridgeState) GetVersion() *BridgeState_Version {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *BridgeState) GetZigbee() *BridgeState_Zigbee {
	if m != nil {
		return m.Zigbee
	}
	return nil
}

func (m *BridgeState) GetZwave() *BridgeState_Zwave {
	if m != nil {
		return m.Zwave
	}
	return nil
}

type BridgeState_Version struct {
	Api string `protobuf:"bytes,1,opt,name=api" json:"api,omitempty"`
	Sw  string `protobuf:"bytes,2,opt,name=sw" json:"sw,omitempty"`
}

func (m *BridgeState_Version) Reset()                    { *m = BridgeState_Version{} }
func (m *BridgeState_Version) String() string            { return proto1.CompactTextString(m) }
func (*BridgeState_Version) ProtoMessage()               {}
func (*BridgeState_Version) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

type BridgeState_Zigbee struct {
	Channel int32 `protobuf:"varint,1,opt,name=channel" json:"channel,omitempty"`
}

func (m *BridgeState_Zigbee) Reset()                    { *m = BridgeState_Zigbee{} }
func (m *BridgeState_Zigbee) String() string            { return proto1.CompactTextString(m) }
func (*BridgeState_Zigbee) ProtoMessage()               {}
func (*BridgeState_Zigbee) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 1} }

type BridgeState_Zwave struct {
	HomeId string `protobuf:"bytes,1,opt,name=homeId" json:"homeId,omitempty"`
	Mode   string `protobuf:"bytes,2,opt,name=mode" json:"mode,omitempty"`
}

func (m *BridgeState_Zwave) Reset()                    { *m = BridgeState_Zwave{} }
func (m *BridgeState_Zwave) String() string            { return proto1.CompactTextString(m) }
func (*BridgeState_Zwave) ProtoMessage()               {}
func (*BridgeState_Zwave) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 2} }

type BridgeConfig struct {
	Name     string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Address  *Address `protobuf:"bytes,10,opt,name=address" json:"address,omitempty"`
	Timezone string   `protobuf:"bytes,50,opt,name=timezone" json:"timezone,omitempty"`
}

func (m *BridgeConfig) Reset()                    { *m = BridgeConfig{} }
func (m *BridgeConfig) String() string            { return proto1.CompactTextString(m) }
func (*BridgeConfig) ProtoMessage()               {}
func (*BridgeConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *BridgeConfig) GetAddress() *Address {
	if m != nil {
		return m.Address
	}
	return nil
}

type BridgeSwUpdate struct {
	IsAvailable bool   `protobuf:"varint,1,opt,name=is_available,json=isAvailable" json:"is_available,omitempty"`
	NotifyUser  bool   `protobuf:"varint,10,opt,name=notify_user,json=notifyUser" json:"notify_user,omitempty"`
	NotifyText  string `protobuf:"bytes,11,opt,name=notify_text,json=notifyText" json:"notify_text,omitempty"`
	NotifyUrl   string `protobuf:"bytes,12,opt,name=notify_url,json=notifyUrl" json:"notify_url,omitempty"`
}

func (m *BridgeSwUpdate) Reset()                    { *m = BridgeSwUpdate{} }
func (m *BridgeSwUpdate) String() string            { return proto1.CompactTextString(m) }
func (*BridgeSwUpdate) ProtoMessage()               {}
func (*BridgeSwUpdate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type Bridge struct {
	Id               string        `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	IsActive         bool          `protobuf:"varint,2,opt,name=is_active,json=isActive" json:"is_active,omitempty"`
	ModelId          string        `protobuf:"bytes,10,opt,name=model_id,json=modelId" json:"model_id,omitempty"`
	ModelName        string        `protobuf:"bytes,11,opt,name=model_name,json=modelName" json:"model_name,omitempty"`
	ModelDescription string        `protobuf:"bytes,12,opt,name=model_description,json=modelDescription" json:"model_description,omitempty"`
	Manufacturer     string        `protobuf:"bytes,13,opt,name=manufacturer" json:"manufacturer,omitempty"`
	IconUrl          []string      `protobuf:"bytes,20,rep,name=icon_url,json=iconUrl" json:"icon_url,omitempty"`
	Config           *BridgeConfig `protobuf:"bytes,100,opt,name=config" json:"config,omitempty"`
	State            *BridgeState  `protobuf:"bytes,101,opt,name=state" json:"state,omitempty"`
}

func (m *Bridge) Reset()                    { *m = Bridge{} }
func (m *Bridge) String() string            { return proto1.CompactTextString(m) }
func (*Bridge) ProtoMessage()               {}
func (*Bridge) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Bridge) GetConfig() *BridgeConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *Bridge) GetState() *BridgeState {
	if m != nil {
		return m.State
	}
	return nil
}

type GetBridgesRequest struct {
}

func (m *GetBridgesRequest) Reset()                    { *m = GetBridgesRequest{} }
func (m *GetBridgesRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetBridgesRequest) ProtoMessage()               {}
func (*GetBridgesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type GetBridgesResponse struct {
	Bridges []*Bridge `protobuf:"bytes,1,rep,name=bridges" json:"bridges,omitempty"`
}

func (m *GetBridgesResponse) Reset()                    { *m = GetBridgesResponse{} }
func (m *GetBridgesResponse) String() string            { return proto1.CompactTextString(m) }
func (*GetBridgesResponse) ProtoMessage()               {}
func (*GetBridgesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *GetBridgesResponse) GetBridges() []*Bridge {
	if m != nil {
		return m.Bridges
	}
	return nil
}

type WatchBridgesRequest struct {
}

func (m *WatchBridgesRequest) Reset()                    { *m = WatchBridgesRequest{} }
func (m *WatchBridgesRequest) String() string            { return proto1.CompactTextString(m) }
func (*WatchBridgesRequest) ProtoMessage()               {}
func (*WatchBridgesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type WatchBridgesResponse struct {
	Action WatchBridgesResponse_Action `protobuf:"varint,1,opt,name=action,enum=proto.WatchBridgesResponse_Action" json:"action,omitempty"`
	Bridge *Bridge                     `protobuf:"bytes,2,opt,name=bridge" json:"bridge,omitempty"`
}

func (m *WatchBridgesResponse) Reset()                    { *m = WatchBridgesResponse{} }
func (m *WatchBridgesResponse) String() string            { return proto1.CompactTextString(m) }
func (*WatchBridgesResponse) ProtoMessage()               {}
func (*WatchBridgesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *WatchBridgesResponse) GetBridge() *Bridge {
	if m != nil {
		return m.Bridge
	}
	return nil
}

func init() {
	proto1.RegisterType((*Address)(nil), "proto.Address")
	proto1.RegisterType((*Address_Ip)(nil), "proto.Address.Ip")
	proto1.RegisterType((*Address_Usb)(nil), "proto.Address.Usb")
	proto1.RegisterType((*BridgeState)(nil), "proto.BridgeState")
	proto1.RegisterType((*BridgeState_Version)(nil), "proto.BridgeState.Version")
	proto1.RegisterType((*BridgeState_Zigbee)(nil), "proto.BridgeState.Zigbee")
	proto1.RegisterType((*BridgeState_Zwave)(nil), "proto.BridgeState.Zwave")
	proto1.RegisterType((*BridgeConfig)(nil), "proto.BridgeConfig")
	proto1.RegisterType((*BridgeSwUpdate)(nil), "proto.BridgeSwUpdate")
	proto1.RegisterType((*Bridge)(nil), "proto.Bridge")
	proto1.RegisterType((*GetBridgesRequest)(nil), "proto.GetBridgesRequest")
	proto1.RegisterType((*GetBridgesResponse)(nil), "proto.GetBridgesResponse")
	proto1.RegisterType((*WatchBridgesRequest)(nil), "proto.WatchBridgesRequest")
	proto1.RegisterType((*WatchBridgesResponse)(nil), "proto.WatchBridgesResponse")
	proto1.RegisterEnum("proto.WatchBridgesResponse_Action", WatchBridgesResponse_Action_name, WatchBridgesResponse_Action_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for BridgeManager service

type BridgeManagerClient interface {
	GetBridges(ctx context.Context, in *GetBridgesRequest, opts ...grpc.CallOption) (*GetBridgesResponse, error)
	WatchBridges(ctx context.Context, in *WatchBridgesRequest, opts ...grpc.CallOption) (BridgeManager_WatchBridgesClient, error)
}

type bridgeManagerClient struct {
	cc *grpc.ClientConn
}

func NewBridgeManagerClient(cc *grpc.ClientConn) BridgeManagerClient {
	return &bridgeManagerClient{cc}
}

func (c *bridgeManagerClient) GetBridges(ctx context.Context, in *GetBridgesRequest, opts ...grpc.CallOption) (*GetBridgesResponse, error) {
	out := new(GetBridgesResponse)
	err := grpc.Invoke(ctx, "/proto.BridgeManager/GetBridges", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bridgeManagerClient) WatchBridges(ctx context.Context, in *WatchBridgesRequest, opts ...grpc.CallOption) (BridgeManager_WatchBridgesClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_BridgeManager_serviceDesc.Streams[0], c.cc, "/proto.BridgeManager/WatchBridges", opts...)
	if err != nil {
		return nil, err
	}
	x := &bridgeManagerWatchBridgesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type BridgeManager_WatchBridgesClient interface {
	Recv() (*WatchBridgesResponse, error)
	grpc.ClientStream
}

type bridgeManagerWatchBridgesClient struct {
	grpc.ClientStream
}

func (x *bridgeManagerWatchBridgesClient) Recv() (*WatchBridgesResponse, error) {
	m := new(WatchBridgesResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for BridgeManager service

type BridgeManagerServer interface {
	GetBridges(context.Context, *GetBridgesRequest) (*GetBridgesResponse, error)
	WatchBridges(*WatchBridgesRequest, BridgeManager_WatchBridgesServer) error
}

func RegisterBridgeManagerServer(s *grpc.Server, srv BridgeManagerServer) {
	s.RegisterService(&_BridgeManager_serviceDesc, srv)
}

func _BridgeManager_GetBridges_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBridgesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BridgeManagerServer).GetBridges(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.BridgeManager/GetBridges",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BridgeManagerServer).GetBridges(ctx, req.(*GetBridgesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BridgeManager_WatchBridges_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(WatchBridgesRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(BridgeManagerServer).WatchBridges(m, &bridgeManagerWatchBridgesServer{stream})
}

type BridgeManager_WatchBridgesServer interface {
	Send(*WatchBridgesResponse) error
	grpc.ServerStream
}

type bridgeManagerWatchBridgesServer struct {
	grpc.ServerStream
}

func (x *bridgeManagerWatchBridgesServer) Send(m *WatchBridgesResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _BridgeManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.BridgeManager",
	HandlerType: (*BridgeManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBridges",
			Handler:    _BridgeManager_GetBridges_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "WatchBridges",
			Handler:       _BridgeManager_WatchBridges_Handler,
			ServerStreams: true,
		},
	},
	Metadata: fileDescriptor0,
}

func init() { proto1.RegisterFile("bridge.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 792 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x54, 0xc1, 0x6e, 0xdb, 0x38,
	0x10, 0x8d, 0xec, 0xb5, 0x64, 0x8f, 0x1d, 0x23, 0x61, 0xb2, 0x0b, 0x59, 0xc1, 0x62, 0x13, 0x61,
	0x17, 0x1b, 0x20, 0x58, 0x63, 0xd7, 0xd9, 0x53, 0x81, 0x1e, 0xdc, 0x38, 0x48, 0x83, 0x22, 0x69,
	0xc1, 0x36, 0x29, 0xd0, 0x8b, 0x41, 0x5b, 0x8c, 0x4d, 0xd4, 0x96, 0x54, 0x51, 0xb6, 0x9b, 0x7c,
	0x47, 0x7f, 0xa0, 0xb7, 0x9e, 0xfb, 0x17, 0xfd, 0x81, 0x7e, 0x4f, 0xc9, 0x21, 0xd5, 0xd8, 0xa9,
	0xd1, 0x93, 0x38, 0xf3, 0x1e, 0xdf, 0x0c, 0xdf, 0x0c, 0x04, 0x8d, 0x41, 0x26, 0xa2, 0x11, 0x6f,
	0xa7, 0x59, 0x92, 0x27, 0xa4, 0x82, 0x9f, 0xf0, 0xab, 0x03, 0x5e, 0x37, 0x8a, 0x32, 0x2e, 0x25,
	0x39, 0x80, 0x92, 0x48, 0x7d, 0x67, 0xdf, 0x39, 0xac, 0x77, 0xb6, 0x0d, 0xad, 0x6d, 0xb1, 0xf6,
	0x79, 0x4a, 0x15, 0x48, 0xfe, 0x84, 0xf2, 0x4c, 0x0e, 0xfc, 0x12, 0x72, 0xc8, 0x03, 0xce, 0x95,
	0x1c, 0x50, 0x0d, 0x07, 0x23, 0x28, 0x9d, 0xa7, 0x84, 0xc0, 0x2f, 0xe3, 0x44, 0xe6, 0x28, 0x58,
	0xa3, 0x78, 0x26, 0x3e, 0x78, 0x31, 0xcf, 0xa7, 0x4c, 0xbe, 0x45, 0x8d, 0x1a, 0x2d, 0x42, 0x8d,
	0x8c, 0x58, 0xce, 0x17, 0xec, 0xd6, 0x2f, 0x1b, 0xc4, 0x86, 0xa4, 0x05, 0xd5, 0xb9, 0x60, 0xfd,
	0x68, 0x3c, 0x4c, 0x7d, 0x50, 0x50, 0x95, 0x7a, 0x2a, 0xee, 0xa9, 0x30, 0x68, 0x41, 0x59, 0x15,
	0xd5, 0x95, 0x52, 0x96, 0x8f, 0x8b, 0x4a, 0xfa, 0x1c, 0x7e, 0x29, 0x41, 0xfd, 0x09, 0x3e, 0xf8,
	0x65, 0xae, 0x84, 0xc8, 0x1e, 0xd4, 0x84, 0xec, 0xa7, 0x4c, 0x64, 0x3c, 0x42, 0x62, 0x95, 0x56,
	0x85, 0x7c, 0x81, 0x31, 0xf9, 0x1f, 0xbc, 0x39, 0xcf, 0xa4, 0x48, 0x62, 0x3f, 0xc2, 0xa7, 0x05,
	0xf6, 0x69, 0x4b, 0x0a, 0xed, 0x6b, 0xc3, 0xa0, 0x05, 0x95, 0xfc, 0x07, 0xee, 0x9d, 0x18, 0x0d,
	0x38, 0xf7, 0x63, 0xbc, 0xd4, 0x5a, 0x73, 0xe9, 0x0d, 0x12, 0xa8, 0x25, 0x92, 0x36, 0x54, 0xee,
	0x16, 0x6c, 0xce, 0xfd, 0x04, 0x6f, 0xf8, 0xeb, 0x6e, 0x68, 0x9c, 0x1a, 0x5a, 0x70, 0x04, 0x9e,
	0x2d, 0x4b, 0xb6, 0xa0, 0xcc, 0x52, 0x61, 0xdf, 0xa8, 0x8f, 0xa4, 0x09, 0x25, 0xb9, 0xb0, 0x3e,
	0xaa, 0x53, 0x10, 0x82, 0x6b, 0xca, 0x69, 0x33, 0x87, 0x63, 0x16, 0xc7, 0x7c, 0x82, 0xfc, 0x0a,
	0x2d, 0xc2, 0xe0, 0x18, 0x2a, 0x58, 0x80, 0xfc, 0x06, 0xee, 0x38, 0x99, 0xf2, 0xf3, 0xc8, 0x2a,
	0xda, 0x48, 0x7b, 0x39, 0x4d, 0x22, 0x6e, 0x65, 0xf1, 0x1c, 0x8e, 0xa1, 0x61, 0x3a, 0x3c, 0x49,
	0xe2, 0x1b, 0x31, 0xd2, 0x9c, 0x98, 0x4d, 0x79, 0xe1, 0xb7, 0x3e, 0x93, 0x43, 0xf0, 0x98, 0xd9,
	0x03, 0x1c, 0x52, 0xbd, 0xd3, 0x5c, 0xdd, 0x0e, 0x5a, 0xc0, 0x24, 0x80, 0x6a, 0x2e, 0xa6, 0xfc,
	0x2e, 0x89, 0xb9, 0xdf, 0x41, 0x85, 0xef, 0x71, 0xf8, 0xc1, 0x81, 0xa6, 0x35, 0x63, 0x71, 0x95,
	0x46, 0x7a, 0x70, 0x07, 0xd0, 0x50, 0x83, 0x63, 0x73, 0x26, 0x26, 0x6c, 0x30, 0xe1, 0x76, 0x76,
	0x75, 0x21, 0xbb, 0x45, 0x8a, 0xfc, 0x01, 0xf5, 0x38, 0xc9, 0xc5, 0xcd, 0x6d, 0x7f, 0x26, 0x79,
	0x66, 0x97, 0x04, 0x4c, 0xea, 0x4a, 0x65, 0x96, 0x08, 0x39, 0x7f, 0x9f, 0xfb, 0x75, 0xac, 0x6a,
	0x09, 0xaf, 0x54, 0x86, 0xfc, 0x0e, 0x50, 0x28, 0x64, 0x13, 0xbf, 0x81, 0x78, 0xcd, 0x0a, 0x64,
	0x93, 0xf0, 0x73, 0x09, 0x5c, 0xd3, 0x96, 0x36, 0x5d, 0x14, 0x9e, 0xa9, 0x93, 0xdd, 0x2b, 0x36,
	0xcc, 0xc5, 0xdc, 0x98, 0x86, 0x7b, 0xd5, 0xc5, 0x58, 0xaf, 0xae, 0x36, 0x70, 0xd2, 0x57, 0x57,
	0xc0, 0x6c, 0x35, 0xc6, 0xca, 0x67, 0x55, 0xd1, 0x40, 0xe8, 0xa4, 0xe9, 0xa8, 0x86, 0x99, 0x4b,
	0x6d, 0xe7, 0x11, 0x6c, 0x1b, 0x38, 0xe2, 0x72, 0x98, 0x89, 0x34, 0xd7, 0xbb, 0x69, 0xfa, 0xda,
	0x42, 0xa0, 0x77, 0x9f, 0x27, 0x21, 0x34, 0xa6, 0x2c, 0x9e, 0xdd, 0xa8, 0x2e, 0x66, 0x99, 0x32,
	0x60, 0x13, 0x79, 0x2b, 0x39, 0xdd, 0x8a, 0x18, 0x26, 0x31, 0xbe, 0x6f, 0x77, 0xbf, 0xac, 0x5b,
	0xd1, 0xb1, 0x7a, 0x9d, 0xaa, 0xe5, 0x0e, 0x71, 0xb0, 0x76, 0xf9, 0x77, 0x56, 0xb6, 0xd2, 0xcc,
	0x9c, 0x5a, 0x8a, 0x9a, 0x73, 0x45, 0xea, 0x3d, 0xf5, 0xf9, 0xca, 0x3f, 0x60, 0x69, 0x83, 0xa9,
	0x21, 0x84, 0x3b, 0xb0, 0x7d, 0xc6, 0x73, 0x03, 0x48, 0xca, 0xdf, 0xcd, 0xb8, 0xcc, 0xc3, 0xc7,
	0x40, 0x96, 0x93, 0x32, 0x4d, 0x62, 0xc9, 0xc9, 0xdf, 0xe0, 0x99, 0x9f, 0x93, 0x54, 0xce, 0x96,
	0x95, 0xec, 0xe6, 0x8a, 0x2c, 0x2d, 0xd0, 0xf0, 0x57, 0xd8, 0x79, 0xcd, 0xf2, 0xe1, 0xf8, 0x81,
	0xea, 0x27, 0x07, 0x76, 0x57, 0xf3, 0x56, 0xf8, 0x11, 0xb8, 0x7a, 0x34, 0xca, 0x3b, 0x3d, 0xb1,
	0x66, 0x27, 0xb4, 0xba, 0xeb, 0xc8, 0xed, 0x2e, 0x32, 0xa9, 0xbd, 0x41, 0xfe, 0x02, 0xd7, 0x94,
	0xb5, 0xbf, 0xbb, 0x07, 0x3d, 0x59, 0x30, 0xfc, 0x07, 0x5c, 0x73, 0x91, 0xd4, 0xa0, 0xd2, 0xed,
	0xf5, 0x4e, 0x7b, 0x5b, 0x1b, 0xa4, 0x0e, 0xde, 0xc9, 0xd3, 0xee, 0xe5, 0x99, 0x0a, 0x1c, 0x1d,
	0xd0, 0xd3, 0x8b, 0xe7, 0xd7, 0x2a, 0x28, 0x75, 0x3e, 0x3a, 0xb0, 0x69, 0x14, 0x2e, 0x58, 0xcc,
	0x46, 0x6a, 0x32, 0x27, 0x00, 0xf7, 0x96, 0x90, 0xe2, 0x97, 0xf0, 0x83, 0x75, 0x41, 0x6b, 0x0d,
	0x62, 0x3a, 0x0f, 0x37, 0xc8, 0x33, 0x68, 0x2c, 0xbf, 0x89, 0x04, 0x6b, 0x1f, 0x6a, 0x84, 0xf6,
	0x7e, 0x62, 0x42, 0xb8, 0xf1, 0xaf, 0x33, 0x70, 0x11, 0x3f, 0xfe, 0x16, 0x00, 0x00, 0xff, 0xff,
	0xf3, 0x9b, 0x93, 0x4e, 0x32, 0x06, 0x00, 0x00,
}
